*gruvbox.nvim.txt*       For Neovim 0.9.0+       Last change: 2025 February 16

==============================================================================
Table of Contents                             *gruvbox.nvim-table-of-contents*

1. gruvbox.nvim                                    |gruvbox.nvim-gruvbox.nvim|
2. Prerequisites                                  |gruvbox.nvim-prerequisites|
3. Installing                                        |gruvbox.nvim-installing|
  - Using lazy.nvim                  |gruvbox.nvim-installing-using-lazy.nvim|
  - Using vim-plug                    |gruvbox.nvim-installing-using-vim-plug|
  - Using packer                        |gruvbox.nvim-installing-using-packer|
4. Basic Usage                                      |gruvbox.nvim-basic-usage|
5. Configuration                                  |gruvbox.nvim-configuration|
  - Overriding                         |gruvbox.nvim-configuration-overriding|

==============================================================================
1. gruvbox.nvim                                    *gruvbox.nvim-gruvbox.nvim*

A complete overhaul of the gruvbox original theme
<https://github.com/morhetz/gruvbox>, based on both ellisonleao’s
gruvbox.nvim <https://github.com/ellisonleao/gruvbox.nvim> and folke’s
tokyonight.nvim <https://github.com/folke/tokyonight.nvim> themes.

DarkHardMediumSoftLightHardMediumSoft
==============================================================================
2. Prerequisites                                  *gruvbox.nvim-prerequisites*

Neovim 0.9.0+


==============================================================================
3. Installing                                        *gruvbox.nvim-installing*


USING LAZY.NVIM                      *gruvbox.nvim-installing-using-lazy.nvim*

>lua
    { "pedrog14/gruvbox.nvim", lazy = false, priority = 1000, opts = {...} }
<


USING VIM-PLUG                        *gruvbox.nvim-installing-using-vim-plug*

>vim
    Plug 'pedrog14/gruvbox.nvim'
<


USING PACKER                            *gruvbox.nvim-installing-using-packer*

>lua
    use { "pedrog14/gruvbox.nvim" }
<


==============================================================================
4. Basic Usage                                      *gruvbox.nvim-basic-usage*

Inside your lua config:

>lua
    vim.opt.background = "dark" -- or "light" for light mode
    vim.cmd.colorscheme("gruvbox")
<

Inside `init.vim`:

>vim
    set background=dark " or "light" for light mode
    colorscheme gruvbox
<


==============================================================================
5. Configuration                                  *gruvbox.nvim-configuration*

The default settings for gruvbox are:

>lua
    {
        cache = true,
        contrast = nil, --[[@type GruvboxContrast]]
        dim_inactive = false,
        terminal_colors = true,
        transparent_mode = false,
        color_override = {}, --[[@type GruvboxColors]]
        group_override = {}, --[[@type table<string, vim.api.keyset.highlight>]]
        plugins = {
            all = package.loaded.lazy == nil,
            auto = true,
        },
        -- stylua: ignore
        style = {
            bold          = true,
            italic        = true,
            reverse       = true,
            strikethrough = true,
            undercurl     = true,
            underline     = true,
    
            comments      = {}, --[[@type vim.api.keyset.highlight]]
            indent        = {}, --[[@type vim.api.keyset.highlight]]
            operators     = {}, --[[@type vim.api.keyset.highlight]]
            selection     = {}, --[[@type vim.api.keyset.highlight]]
            signs         = {}, --[[@type vim.api.keyset.highlight]]
            strings       = {}, --[[@type vim.api.keyset.highlight]]
            tabline       = {}, --[[@type vim.api.keyset.highlight]]
        },
    }
<

**VERY IMPORTANT**: Make sure to call setup() **BEFORE** calling the
colorscheme command, to use your custom configs!


OVERRIDING                             *gruvbox.nvim-configuration-overriding*


PALETTE ~

You can specify your own colors. For example:

>lua
    require("gruvbox").setup({
        color_override = {
            bg0 = "#000000"
        }
    })
<


HIGHLIGHT GROUPS ~

If you don’t enjoy the current color for a specific highlight group, now you
can just override it in the setup. For example:

>lua
    require("gruvbox").setup({
        group_override = {
            SignColumn = { bg = "#ff9900" }
        }
    })
<

It also works with treesitter groups and lsp semantic highlight tokens:

>lua
    require("gruvbox").setup({
        group_override = {
            ["@lsp.type.method"] = { bg = "#ff9900" },
            ["@comment.lua"] = { bg = "#000000" },
        }
    })
<

Please notice that the values on the overrides must follow the pattern that can
be seen on |`synIDattr`|.

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
